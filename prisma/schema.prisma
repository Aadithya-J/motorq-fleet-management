generator client {
  provider      = "prisma-client-js"
  output        = "../generated/prisma"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Owner { 
  id Int @id @default(autoincrement())
  name String

  Fleet Fleet[]
}

model Fleet {
  id Int @id @default(autoincrement())
  name String
  OwnerId Int
  owner Owner @relation(fields: [OwnerId], references: [id])
  vehicles Vehicle[]
}

model Vehicle {
  vin                Int                    @id @default(autoincrement())
  manufacturer       String
  model              String
  registrationStatus RegistrationStatusType @default(ACTIVE)
  telemtries         Telemetry[]

  fleetID            Int
  fleet Fleet @relation(fields: [fleetID],references: [id])

  currentAlertCount Int @default(0)

  @@index([fleetID])
  Alert Alert[]
}

model Telemetry {
  id              Int              @id @default(autoincrement())
  vehicleVin      Int
  latitude        String
  longitude       String
  speed           Float
  engineStatus    EngineStatusType
  fuelPercentage  Float
  odometerReading Int
  errorCode       String
  timestamp       DateTime
  vehicle         Vehicle          @relation(fields: [vehicleVin], references: [vin])
  alert Alert[]
  @@index([vehicleVin])
}

enum RegistrationStatusType {
  ACTIVE
  MAINTENANCE
  DECOMISSIONED
}

enum EngineStatusType {
  ON
  OFF
  IDLE
}

model Alert {
  id Int @id @default(autoincrement())
  alert String
  telemetryid Int
  telemetry Telemetry @relation(fields: [telemetryid], references: [id])
  vehicleid Int
  vehicle Vehicle @relation(fields: [vehicleid], references: [vin])
  timestamp DateTime @default(now())
}